<div class="tw-my-6">
  <%= render "railsui/shared/sticky_subhead", title: "Flash messages", subtitle: "Notice" %>

  <div class="rui">
    <div class="flash" role="alert">
      <p>A message commonly displayed at the top of the viewport on <a href="https://rubyonrails.org">Rails</a> apps after something changes.</p>
    </div>
  </div>

  <% content_for :html, flush: true do %>
    <div class="flash" role="alert">
      <p>A message commonly displayed at the top of the viewport on <a href="https://rubyonrails.org">Rails</a> apps after something changes.</p>
    </div>
  <% end %>

<% content_for :erb, flush: true do %>
<%% if notice %>
<div class="flash" role="alert">
  <p><%%= sanitize notice %></p>
</div>
<%% end %>
<% end %>

<% content_for :haml, flush: true do %>
- if notice
  .flash{:role => "alert"}
    %p= sanitize notice
<% end %>

  <%= render_snippet %>
</div>

<div class="tw-my-16">
  <%= render "railsui/shared/sticky_subhead", title: "Flash messages", subtitle: "Warning" %>
  <div class="rui">
    <div class="flash flash-warning" role="alert">
      <p>A message commonly displayed at the top of the viewport on <a href="https://rubyonrails.org">Rails</a> apps when an error or exception occurs.</p>
    </div>
  </div>
</div>

<div class="tw-my-16">
  <%= render "railsui/shared/sticky_subhead", title: "Flash messages", subtitle: "Hide notice after delay" %>

  <div class="tw-prose dark:tw-prose-invert tw-mb-6">If you wanted to make use of JavaScript you could hide a notice after some time.</div>

  <p class="tw-bg-gradient-to-br tw-from-yellow-300 tw-to-yellow-500 tw-text-black tw-rounded-full tw-px-3 tw-py-1 tw-font-semibold tw-inline-block tw-text-xs">Vanilla JavaScript</p>

<% content_for :html, flush: true do %>
<div class="flash flash-warning" role="alert">
  <p>...</p>
</div>
<% end %>

<% content_for :erb, flush: true do %>

<% end %>

<% content_for :haml, flush: true do %>

<% end %>

<% content_for :js, flush: true do %>
// app/javascript/application.js
document.addEventListener('turbo:load', () => {
  const flash = document.querySelector('.flash')

  // After 5 seconds use Bootstrap's d-none class to hide the notice.
  setTimeout(() => {
    flash.classList.add('d-none')
  }, 5000)
})
<% end %>
<%= render_snippet(active_tab: "js") %>

<p class="tw-bg-gradient-to-br tw-from-yellow-300 tw-to-yellow-500 tw-text-black tw-rounded-full tw-px-3 tw-py-1 tw-font-semibold tw-inline-block tw-text-xs">Stimulus.js</p>

<% content_for :html, flush: true do %>
<div class="notice" role="alert" data-controller="flash">
  <p>...</p>
</div>
<% end %>

<% content_for :erb, flush: true do %>

<% end %>

<% content_for :haml, flush: true do %>

<% end %>

<% content_for :js, flush: true do %>
// app/javascript/controllers/flash_controller.js
import { Controller } from "@hotwired/stimulus"

export default class extends Controller {
  connect() {
    setTimeout(() => {
      this.element.classList.add('d-none');
    }, 5000)
  }
}
<% end %>
  <%= render_snippet(active_tab: "js") %>
</div>
